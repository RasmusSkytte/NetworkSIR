#  Define default simulation parameters

# Default parameters:
version: 2.1 # the version of the algorithm

N_init: 2000  # Initial Infected
beta: 0.012  # Daily infection rate (SIR, init: 0-1, but beta = (2mu/N_tot)* betaSIR)
sigma_beta: 0.0  # Spread in rates, beta

R_guess: 1  # Set the guess for the reproduction number

# english type corona
N_init_UK_frac: 0
beta_UK_multiplier: 1.7
outbreak_position_UK: random

R_init : 0

initial_infection_distribution : newest
initial_wgs_distribution : '2021_03_25'    # No variants

lambda_E: 1.0  # E->I, Lambda(from E states)
lambda_I: 1.0  # I->R, Lambda(from I states)

# Other:
make_random_initial_infections: True # Infections around a single agent
weighted_random_initial_infections: False # Infections weighted by the number of contacts
initialize_at_kommune_level: False # Initiate infections at kommune basis

# Set label information:
# land, region, landsdel, kommune, sogne
stratified_labels: region  # Output granularity

incidence_labels:               [[ kommune       ]] # Incidence restriction granularity
incidence_threshold :           [[ 100.0         ]]
infection_threshold :           [[ 0             ]]
percentage_threshold :          [[ 0.0           ]]
incidence_intervention_effect : [[ [1, 0.9, 0.9] ]]

incidence_interventions_to_apply: [0]
  # 0: Do nothing
  # 1: Rate reductions


test_reference :      0.017   # 1.7 % percent daily
incidence_reference : 100_000
testing_exponent :    0.55


matrix_labels: landsdel    # Matrix restriction granularity
matrix_label_multiplier: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]  # Landsdelniveau

initial_infected_label_weight : [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]  # Landsdelniveau

day_max: 35 # 5 weeks. Sets the maximum number of days the algorithm runs


# vaccinations related variables.
start_date_offset: 0 # Number of days between start date and vaccination start


#  Define default intervention parameters
do_interventions: True


continuous_interventions_to_apply: [1, 2, 3, 4, 5]
  # 0: Do nothing
  # 1: Tracing (infected and their connections)
  # 2: Test people with symptoms
  # 3: Isolate
  # 4: Random Testing
  # 5: vaccinations

test_delay_in_clicks: [0, 0, 20] #clicks until test. [symptoms, random_test, tracing]
results_delay_in_clicks: [5, 10, 5] #clicks from test until results. [symptoms, random_test, tracing]
intervention_removal_delay_in_clicks: 70
chance_of_finding_infected: [0.25, 0.35, 0.25, 0.15] # chance of being detected in test in I_th state
days_looking_back: 7 # When looking for local outbreaks, how many days are we looking back, e.g. number of people infected within the last 7 days

# What fraction of the agegroups gets testet?
#                      0-9, 10-19, 20-29, 30-39, 40-49, 50-59, 60-69,   70+
testing_penetration: [0.20,  0.35,  0.48,  0.48,  0.50,  0.60,  0.75,  0.80]


# Reductions.
# The rate reductions are list of list, first and second entry are rate reductions for the groups [family, job, other]. The third entry is the chance of choosing the first set. As such you can have some follow the lockdown and some not or some one group being able to work from home and another isn't.
# masking_rate_reduction: [[0.0, 0.0, 0.3], [0.0, 0.0, 0.8]] # [family, job, other]
# lockdown_rate_reduction: [[0.0, 1.0, 0.6], [0.0, 0.6, 0.6]] # [family, job, other]
isolation_rate_multiplier: [0.8, 0.0, 0.0, 0.1] # [family, job, school, other]
tracing_rates: [1.0, 0.8, 0.8, 0.8] # [family, job, school, other]
tracing_delay: 10 #

# Vaccination related parameters
Intervention_vaccination_schedule_name : None
Intervention_vaccination_effect_delays : [0]
Intervention_vaccination_efficacies : [0]

# Season related parameters
seasonal_list_name : None
seasonal_strength : 0


# Event related parameters
N_events: 0 # number of daily events
event_size_max: [[10, 20]] #max size of events. If 0 => N_tot (no max)  [indoor, outdoor]
event_size_mean: [5, 10] # mean size of events (exponential distribution) [indoor, outdoor]

event_beta_scaling: 5 # how much more disease spreads at events (1 = normal, 2 = double of normal)
event_weekend_multiplier: 2.0 # ratio of how many more events are happening in weekends. 1 = similar, 2 = double

event_rho : 0.5 # Distance factor for events
event_epsilon_rho : 0.04 # Distance factor for events

outdoor_indoor_event_ratio : 0 #  0: all events are indoor. 1: all events are outdoor
outdoor_beta_scaling : 1 # Relative beta for outdoor events

